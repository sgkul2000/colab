{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"UNIT 3: Statements and Syntax","provenance":[],"authorship_tag":"ABX9TyON6Vv2jFMyUnHICYApm++X"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Assignment Statements\n","\n","Assignment Statement Forms"],"metadata":{"id":"FfcsvQ6-t8ba"}},{"cell_type":"markdown","source":["\n","\n","1.   Assignments create object references\n","2.  Names are created when first assigned\n","3.  Names must be assigned before being referenced.\n","4. \n","Some operations perform assignments implicitly\n","\n"],"metadata":{"id":"B9_z4XhbufrN"}},{"cell_type":"markdown","source":["\n","1.   spam = 'Spam'     Basic form\n","\n","2.   spam, ham = 'yum', 'YUM' Tuple assignment (positional)\n","3.  [spam, ham] = ['yum', 'YUM'] List assignment (positional)\n","4.  a, b, c, d = 'spam' Sequence assignment, generalized\n","5.   a, *b = 'spam' Extended sequence unpacking\n","6.  spam = ham = 'lunch' Multiple-target assignment\n","7. spams += 42 Augmented assignment (equivalent to spams = spams + 42)\n","\n"],"metadata":{"id":"-hMeFqWXvG67"}},{"cell_type":"code","source":["spam = 'Spam' #Basic\n","spam"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"p7LJl8lPwKi1","executionInfo":{"status":"ok","timestamp":1651645669411,"user_tz":-330,"elapsed":558,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"c7cf53e6-4e08-46dd-cbd8-c487c9c3c8c5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Spam'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["spam, ham = 'yum', 'YUM' #Tuple assignment (positional)\n","spam"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"Gn_rcxfawP4l","executionInfo":{"status":"ok","timestamp":1651645701155,"user_tz":-330,"elapsed":554,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"85ac0320-1677-476a-d147-6f77ff4de42d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'yum'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["ham"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"ZxauY8C1wWaU","executionInfo":{"status":"ok","timestamp":1651645707762,"user_tz":-330,"elapsed":4,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"edc20b95-c9d4-442f-d136-25b50b16445b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'YUM'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["[spam, ham] = ['yum', 'YUM']  # List assignment (positional)\n","spam"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"MCwQZK_CwaLU","executionInfo":{"status":"ok","timestamp":1651645743116,"user_tz":-330,"elapsed":606,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"01896e31-4b93-4d81-8cb8-e96d7a676b2a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'yum'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["a, b, c, d = 'spam'  #Sequence assignment, generalized\n","c"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"JMe_XIUJwinl","executionInfo":{"status":"ok","timestamp":1651645777012,"user_tz":-330,"elapsed":6,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"485979bd-20ad-40b1-fabc-0ed30bc2e94e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'a'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"g0EYckx9tylw","executionInfo":{"status":"ok","timestamp":1651645801089,"user_tz":-330,"elapsed":600,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"0d6a67b7-c8da-4c90-f8be-bb2f128d57cd"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'s'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":16}],"source":["a, *b = 'spam' # Extended sequence unpacking\n","a"]},{"cell_type":"code","source":["b"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eHJlcS8SvmQs","executionInfo":{"status":"ok","timestamp":1651645802225,"user_tz":-330,"elapsed":552,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"3bb5c979-30b0-4259-9154-2fde2c6aecc1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['p', 'a', 'm']"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["spam = ham = 'lunch' #Multiple-target assignment\n","spam"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"wa0AyEEit5w1","executionInfo":{"status":"ok","timestamp":1651645832289,"user_tz":-330,"elapsed":5,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"27b56b7b-a209-4782-b5d0-22c4db3b987a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'lunch'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["ham\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"-iXlda6Ow2NV","executionInfo":{"status":"ok","timestamp":1651645839902,"user_tz":-330,"elapsed":554,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"2f306896-0292-4b14-dfc4-309b3a28f7c1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'lunch'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["Sequence Assignments"],"metadata":{"id":"mWG4MBilw6kU"}},{"cell_type":"code","source":["n=1\n","w=2\n"],"metadata":{"id":"J7aGC9fTxNgq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["n,w=w,n  # Tuples: swaps values\n","n,w"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O4xK_-RWxTgq","executionInfo":{"status":"ok","timestamp":1651645987468,"user_tz":-330,"elapsed":2,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"ccf29900-6b57-4357-8b72-4b5409706ac8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2, 1)"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["[a, b, c] = (1, 2, 3) # Assign tuple of values to list of names\n","a,c"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6Awotu-vxeVk","executionInfo":{"status":"ok","timestamp":1651646017702,"user_tz":-330,"elapsed":589,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"1f69abba-85c6-4944-b341-dee5021796cf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1, 3)"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["(a, b, c) = \"ABC\" # Assign string of characters to tuple\n","a, c"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZnPa3cOYxjeF","executionInfo":{"status":"ok","timestamp":1651646038656,"user_tz":-330,"elapsed":572,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"248d1b0c-5336-410e-87ac-4b582c6d1641"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('A', 'C')"]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["Advanced sequence assignment patterns"],"metadata":{"id":"Mt5bADyDx4PI"}},{"cell_type":"code","source":["string = 'SPAM'\n","a, b, c, d = string # Same number on both sides\n","a, d"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"blZgdY7Lx7X7","executionInfo":{"status":"ok","timestamp":1651646125359,"user_tz":-330,"elapsed":552,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"d478f9f5-ca9e-44f8-ace2-8484ab168555"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('S', 'M')"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["a, b, c= string # Error if not\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":165},"id":"cfRTnnJSx-bh","executionInfo":{"status":"error","timestamp":1651646200725,"user_tz":-330,"elapsed":588,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"cf46ec85-e183-473b-d4ea-6fe6bac5fa21"},"execution_count":null,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-34-5496681813e2>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mc\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0mstring\u001b[0m \u001b[0;31m# Error if not\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mValueError\u001b[0m: too many values to unpack (expected 3)"]}]},{"cell_type":"code","source":["a, b, c = string[0], string[1], string[2:] # Index and slice\n","a, b, c"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"axrDZejlySBV","executionInfo":{"status":"ok","timestamp":1651646215798,"user_tz":-330,"elapsed":541,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"98751b60-fa68-4357-8318-6b97692c86f0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('S', 'P', 'AM')"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["a, b, c = list(string[:2]) + [string[2:]] # Slice and concatenate\n","a, b, c"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jXAFlyh0yU6d","executionInfo":{"status":"ok","timestamp":1651646227899,"user_tz":-330,"elapsed":798,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"1c8af617-4b94-4f03-e205-0d773a3d204c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('S', 'P', 'AM')"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["a, b = string[:2] # Same, but simpler\n","c = string[2:]\n","a, b, c"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"82dBMoMoyYXd","executionInfo":{"status":"ok","timestamp":1651646247968,"user_tz":-330,"elapsed":701,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"c2a1f042-d8bf-44fd-d408-c285289160a4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('S', 'P', 'AM')"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["(a, b), c = string[:2], string[2:] # Nested sequences\n","a, b, c"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"THjYjKWPyc1O","executionInfo":{"status":"ok","timestamp":1651646260528,"user_tz":-330,"elapsed":618,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"dd972301-2d98-414d-f742-2334f381e623"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('S', 'P', 'AM')"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["((a, b), c) = ('SP', 'AM') # Paired by shape and position\n","a, b, c"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LbAopszpyhOV","executionInfo":{"status":"ok","timestamp":1651646277750,"user_tz":-330,"elapsed":3,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"029ab358-2a76-4580-f2f2-466b5ad7ae82"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('S', 'P', 'AM')"]},"metadata":{},"execution_count":39}]},{"cell_type":"markdown","source":["for (a, b, c) in [(1, 2, 3), (4, 5, 6)]: ... # Simple tuple assignment\n","\n","for ((a, b), c) in [((1, 2), 3), ((4, 5), 6)]: ... # Nested tuple assignment\n","\n","\n"],"metadata":{"id":"DvPK2RyqytYO"}},{"cell_type":"code","source":["red, green, blue = range(3)\n","red, blue"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KMNyVnoqy77d","executionInfo":{"status":"ok","timestamp":1651646392024,"user_tz":-330,"elapsed":2,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"23cc5d3a-9f1e-4f16-e458-017e24d04b27"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0, 2)"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["list(range(3)) # list() required in Python 3.X only"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SjYf5KDMy_uA","executionInfo":{"status":"ok","timestamp":1651646400662,"user_tz":-330,"elapsed":555,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"93c94c2e-cb3f-4c21-f0e6-a39c7cc3d766"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[0, 1, 2]"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["L = [1, 2, 3, 4]\n","while L:\n","  front, L = L[0], L[1:] # See next section for 3.X * alternative\n","  print(front, L)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IXHDUs5nzCbo","executionInfo":{"status":"ok","timestamp":1651646431194,"user_tz":-330,"elapsed":5,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"cb1c2296-af47-4ad9-c93c-35d46bef8f19"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 [2, 3, 4]\n","2 [3, 4]\n","3 [4]\n","4 []\n"]}]},{"cell_type":"markdown","source":["if Statements"],"metadata":{"id":"cK_1NUKjKBhW"}},{"cell_type":"code","source":["if test1: # if test\n"," statements1 # Associated block \n","elif test2: # Optional elifs\n"," statements2 \n","else: # Optional else \n"," statements3"],"metadata":{"id":"2g3QcDPtKXOk"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Multiway Branching"],"metadata":{"id":"aTig7aGCLHtJ"}},{"cell_type":"code","source":["x = 'killer rabbit'\n","if x == 'roger':\n","   print(\"shave and a haircut\")\n","elif x == 'bugs':\n","  print(\"what's up doc?\")\n","else:\n","  print('Run away! Run away!')\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_PdkshFfKpDR","executionInfo":{"status":"ok","timestamp":1652105833434,"user_tz":-330,"elapsed":652,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"bf8b8c80-95bd-45be-f4c9-e7a97acc8a67"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Run away! Run away!\n"]}]},{"cell_type":"markdown","source":["there is no switch or case statement in Python that selects an action based on a variable’s value. \n"," multiway branching as a series of if/elif tests or dictionaries can be used"],"metadata":{"id":"9YxrCdfkL2LY"}},{"cell_type":"code","source":["choice = 'ham'\n","print({'spam': 1.25, # A dictionary-based 'switch'\n","        'ham': 1.99, # Use has_key or get for default\n","        'eggs': 0.99,\n","        'bacon': 1.10}[choice])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3NvRy0F0Ln91","executionInfo":{"status":"ok","timestamp":1652105998572,"user_tz":-330,"elapsed":753,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"8a3d2efb-a85c-44ee-a061-d7d86b9ea4be"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1.99\n"]}]},{"cell_type":"code","source":["if choice == 'spam': # The equivalent if statement\n"," print(1.25)\n","elif choice == 'ham':\n"," print(1.99)\n","elif choice == 'eggs':\n"," print(0.99)\n","elif choice == 'bacon':\n"," print(1.10)\n","else:\n"," print('Bad choice')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PDUgIjXSMXfe","executionInfo":{"status":"ok","timestamp":1652106074311,"user_tz":-330,"elapsed":382,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"adfad556-5e58-4eee-a5b3-407559fdea4a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1.99\n"]}]},{"cell_type":"markdown","source":["Handling switch defaults\n","\n","the **else** clause on the **if** here to handle the default case when no key matches.\n","dictionary defaults can be coded with **in** expressions, **get** method calls, or exception catching with the try statement"],"metadata":{"id":"MTeWw_LwMwx1"}},{"cell_type":"code","source":["branch = {'spam': 1.25, 'ham': 1.99, 'eggs': 0.99}\n","print(branch.get('spam', 'Bad choice'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ao4mLaW9NBqB","executionInfo":{"status":"ok","timestamp":1652106281276,"user_tz":-330,"elapsed":626,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"6eecb72f-53eb-4ae4-a660-418ac838585c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1.25\n"]}]},{"cell_type":"code","source":["print(branch.get('bacon', 'Bad choice'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L7J8noGSNXy6","executionInfo":{"status":"ok","timestamp":1652106300604,"user_tz":-330,"elapsed":512,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"7f19493a-b277-4846-e8c4-da892b139784"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Bad choice\n"]}]},{"cell_type":"code","source":["choice = 'bacon'\n","if choice in branch:\n"," print(branch[choice])\n","else:\n"," print('Bad choice')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EmoGNs-ENcfB","executionInfo":{"status":"ok","timestamp":1652106377146,"user_tz":-330,"elapsed":25,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"129d26aa-d32d-4399-ead2-8b636b872c42"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Bad choice\n"]}]},{"cell_type":"code","source":["try:\n","  print(branch[choice])\n","except KeyError:\n","  print('Bad choice')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6RB8hj4SNxGm","executionInfo":{"status":"ok","timestamp":1652106416828,"user_tz":-330,"elapsed":6,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"86d4687c-7c8e-4b2f-ece9-8ec44006e60a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Bad choice\n"]}]},{"cell_type":"markdown","source":["Python Syntax\n","\n","\n","1.   Statements execute one after another, until you say otherwise\n","2.   Block and statement boundaries are detected automatically\n","3.  Compound statements = header + “:” + indented statements\n","4. Blank lines, spaces, and comments are usually ignored\n","5.  Docstrings are ignored but are saved and displayed by tools.\n","\n","\n","\n","\n","\n"],"metadata":{"id":"aJM7WljtS1iY"}},{"cell_type":"code","source":["x = 1\n","if x:\n","  y = 2\n","  if y:\n","    print('block2')\n","  print('block1')\n","print('block0')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"D5I36qaCUyel","executionInfo":{"status":"ok","timestamp":1652158610307,"user_tz":-330,"elapsed":3,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"e9b9dac3-ef0d-4fa7-f65a-2eabbb2a1c47"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["block2\n","block1\n","block0\n"]}]},{"cell_type":"code","source":["x = 'SPAM' # Error: first line indented\n","if 'rubbery' in 'shrubbery':\n","  print(x * 8)\n","    x += 'NI' # Error: unexpected indentation\n","    if x.endswith('NI'):\n","      x *= 2\n","    print(x) # Error: inconsistent indentation"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":130},"id":"JvxGEHRbU6pN","executionInfo":{"status":"error","timestamp":1652158667375,"user_tz":-330,"elapsed":391,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"7338ed0c-ab07-40e2-b177-90e54f6f68cb"},"execution_count":null,"outputs":[{"output_type":"error","ename":"IndentationError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-2-1d6bbc7d1151>\"\u001b[0;36m, line \u001b[0;32m4\u001b[0m\n\u001b[0;31m    x += 'NI' # Error: unexpected indentation\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unexpected indent\n"]}]},{"cell_type":"code","source":["x = 'SPAM'\n","if 'rubbery' in 'shrubbery':\n","  print(x * 8) # Prints 8 \"SPAM\"\n","  x += 'NI'\n","  if x.endswith('NI'):\n","    x *= 2\n","    print(x) # Prints \"SPAMNISPAMNI\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jNO1kEpMVOPZ","executionInfo":{"status":"ok","timestamp":1652158705349,"user_tz":-330,"elapsed":397,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"6df44ab8-c5e7-43a1-ab05-1577172e61e7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["SPAMSPAMSPAMSPAMSPAMSPAMSPAMSPAM\n","SPAMNISPAMNI\n"]}]},{"cell_type":"markdown","source":["A Few Special Cases"],"metadata":{"id":"XOmCZGHiVyph"}},{"cell_type":"code","source":["L = [\"Good\",\n","\"Bad\",\n","\"Ugly\"] # Open pairs may span lines\n","L"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kxDW5UHwVyYZ","executionInfo":{"status":"ok","timestamp":1652158852878,"user_tz":-330,"elapsed":2,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"97f9b75f-a190-4935-b826-da08cf83eed0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Good', 'Bad', 'Ugly']"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["a,b,c,d,e,f,g=4,4,3,3,3,3,3"],"metadata":{"id":"IyofxC2qWD7R"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["if a == b and c == d and \\\n","  d == e and f == g:\n","    print('olde') # Backslashes allow continuations...\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-gtobBmUV4AY","executionInfo":{"status":"ok","timestamp":1652159172508,"user_tz":-330,"elapsed":374,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"c7968917-ff0a-46ef-c910-c5136fe0b727"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["olde\n"]}]},{"cell_type":"code","source":["if (a == b and c == d and\n","   d == e and e == f):\n","   print('new') # But parentheses usually do too, and are obvious "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eQGc_u5cW0e5","executionInfo":{"status":"ok","timestamp":1652159147289,"user_tz":-330,"elapsed":5,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"c5d54efc-e9ee-4ecb-8c56-fb6b389b1e8f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["new\n"]}]},{"cell_type":"code","source":["x = 1; y = 2; print(x) # More than one simple statement"],"metadata":{"id":"VpI1l2tTXbgR","executionInfo":{"status":"ok","timestamp":1652159267841,"user_tz":-330,"elapsed":405,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"6eb0b026-f3d3-495a-d68c-934ad265ac88","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n"]}]},{"cell_type":"markdown","source":["**Truth Values and Boolean Tests**\n","\n","\n","\n","*   X and Y\n","Is true if both X and Y are true\n","* X or Y\n","Is true if either X or Y is true\n","\n","*  not X\n","Is true if X is false (the expression returns True or False)\n","\n","\n","\n","\n"],"metadata":{"id":"UyPud4FbjgrL"}},{"cell_type":"code","source":["2 < 3, 3 < 2     # Less than: return True or False (1 or 0)"],"metadata":{"id":"Q9TfMGqEXesB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1652196149155,"user_tz":-330,"elapsed":24,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"7146bf67-5686-4678-e220-5511b450a675"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(True, False)"]},"metadata":{},"execution_count":1}]},{"cell_type":"code","source":["2 or 3, 3 or 2 # Return left operand if true  # Else, return right operand (true or false)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5S9cT2VqkUuE","executionInfo":{"status":"ok","timestamp":1652196222535,"user_tz":-330,"elapsed":14,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"6c668613-5222-4cf2-9687-d137ae2cb4d2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2, 3)"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["[] or 3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hUsV5djWkliR","executionInfo":{"status":"ok","timestamp":1652196271814,"user_tz":-330,"elapsed":438,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"002684bd-5cad-4811-91cc-679acb5e469a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["[] or {}"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ee6aLijQkqUz","executionInfo":{"status":"ok","timestamp":1652196291141,"user_tz":-330,"elapsed":573,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"44eab3e4-e741-48b9-f94b-28eb8555c3ba"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{}"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["2 and 3, 3 and 2 # Return left operand if false # Else, return right operand (true or false)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N2lEgvj7kuJb","executionInfo":{"status":"ok","timestamp":1652196322075,"user_tz":-330,"elapsed":14,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"bb473bb9-83e6-4f10-d25a-d3b8adca3dfc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3, 2)"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["[] and {}"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zMjkW32Uk8DL","executionInfo":{"status":"ok","timestamp":1652196363925,"user_tz":-330,"elapsed":17,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"2ef9f250-eee3-4d7b-d9a0-0cb6b4aeda8e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[]"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["3 and []"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7NWJbQ7ck_Ry","executionInfo":{"status":"ok","timestamp":1652196376562,"user_tz":-330,"elapsed":638,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"a3fb7976-8f85-4330-ef18-a02eac77a770"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[]"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["The if/else Ternary Expression\n","A = Y if X else Z"],"metadata":{"id":"p9J15C_LlETd"}},{"cell_type":"code","source":["A = 't' if 'spam' else 'f' # For strings, nonempty means true\n","A"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"sMA5S55IlGDC","executionInfo":{"status":"ok","timestamp":1652196443230,"user_tz":-330,"elapsed":468,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"2ebb6b6c-1ed5-44db-c7b9-45f8412a831e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'t'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["A = 't' if '' else 'f'\n","A\n"],"metadata":{"id":"zXMymYwulTGQ","executionInfo":{"status":"ok","timestamp":1652196464833,"user_tz":-330,"elapsed":446,"user":{"displayName":"Ushadevi A","userId":"18262909476681964434"}},"outputId":"651d61e0-7132-4d32-f97c-12553fa463ba","colab":{"base_uri":"https://localhost:8080/","height":35}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'f'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":14}]}]}